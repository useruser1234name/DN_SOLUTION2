# Generated by Django 5.2.4 on 2025-08-04 13:03

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='정책의 고유 식별자', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='정책의 제목을 입력하세요', max_length=200, verbose_name='정책 제목')),
                ('description', models.TextField(help_text='정책의 상세 설명을 입력하세요', verbose_name='정책 설명')),
                ('form_type', models.CharField(choices=[('general', '일반 신청서'), ('link', '링크 신청서'), ('offline', '오프라인 신청서'), ('egg', '에그 신청서')], default='general', help_text='사용할 신청서 양식을 선택하세요', max_length=20, verbose_name='신청서 타입')),
                ('carrier', models.CharField(choices=[('skt', 'SKT'), ('kt', 'KT'), ('lg', 'LG U+'), ('all', '전체')], default='all', help_text='적용할 통신사를 선택하세요', max_length=10, verbose_name='통신사')),
                ('contract_period', models.CharField(choices=[('12', '12개월'), ('24', '24개월'), ('36', '36개월'), ('all', '전체')], default='all', help_text='적용할 가입기간을 선택하세요', max_length=10, verbose_name='가입기간')),
                ('rebate_agency', models.DecimalField(decimal_places=2, default=0.0, help_text='대리점에 지급할 리베이트 금액', max_digits=10, verbose_name='대리점 리베이트')),
                ('rebate_retail', models.DecimalField(decimal_places=2, default=0.0, help_text='판매점에 지급할 리베이트 금액', max_digits=10, verbose_name='판매점 리베이트')),
                ('expose', models.BooleanField(default=True, help_text='프론트엔드에 정책을 노출할지 여부', verbose_name='정책 노출')),
                ('premium_market_expose', models.BooleanField(default=False, help_text='프리미엄 마켓에 자동 노출할지 여부', verbose_name='프리미엄 마켓 노출')),
                ('html_content', models.TextField(blank=True, help_text='자동 생성된 HTML 상세페이지 내용', null=True, verbose_name='HTML 내용')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_by', models.ForeignKey(blank=True, help_text='정책을 생성한 관리자', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='생성자')),
            ],
            options={
                'verbose_name': '정책',
                'verbose_name_plural': '정책 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='배정의 고유 식별자', primary_key=True, serialize=False)),
                ('custom_rebate', models.DecimalField(blank=True, decimal_places=2, help_text='해당 업체에 특별히 적용할 리베이트 (빈 값이면 정책 기본값 사용)', max_digits=10, null=True, verbose_name='커스텀 리베이트')),
                ('expose_to_child', models.BooleanField(default=True, help_text='하위 업체에 이 정책을 노출할지 여부', verbose_name='하위 노출')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='배정일시')),
                ('company', models.ForeignKey(help_text='정책을 배정받을 업체', on_delete=django.db.models.deletion.CASCADE, related_name='policy_assignments', to='companies.company', verbose_name='업체')),
                ('policy', models.ForeignKey(help_text='배정할 정책', on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='policies.policy', verbose_name='정책')),
            ],
            options={
                'verbose_name': '정책 배정',
                'verbose_name_plural': '정책 배정 목록',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyNotice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='안내사항의 고유 식별자', primary_key=True, serialize=False)),
                ('notice_type', models.CharField(choices=[('customer', '고객 안내'), ('company', '업체 공지'), ('policy', '정책 특이사항'), ('general', '일반 안내')], help_text='안내사항의 유형을 선택하세요', max_length=20, verbose_name='안내 유형')),
                ('title', models.CharField(help_text='안내사항의 제목을 입력하세요', max_length=200, verbose_name='안내 제목')),
                ('content', models.TextField(help_text='안내사항의 상세 내용을 입력하세요', verbose_name='안내 내용')),
                ('is_important', models.BooleanField(default=False, help_text='중요한 안내사항인지 여부', verbose_name='중요 안내')),
                ('order', models.PositiveIntegerField(default=0, help_text='안내사항의 표시 순서 (낮은 숫자가 먼저 표시)', verbose_name='표시 순서')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('policy', models.ForeignKey(help_text='안내사항이 속한 정책', on_delete=django.db.models.deletion.CASCADE, related_name='notices', to='policies.policy', verbose_name='정책')),
            ],
            options={
                'verbose_name': '정책 안내사항',
                'verbose_name_plural': '정책 안내사항 목록',
                'ordering': ['policy', 'order', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['form_type', 'expose'], name='policies_po_form_ty_e25699_idx'),
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['title'], name='policies_po_title_ca6935_idx'),
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['carrier', 'contract_period'], name='policies_po_carrier_9ebcf2_idx'),
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['premium_market_expose'], name='policies_po_premium_8b1e5d_idx'),
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['created_at'], name='policies_po_created_23231a_idx'),
        ),
        migrations.AddIndex(
            model_name='policyassignment',
            index=models.Index(fields=['policy', 'company'], name='policies_po_policy__7f6088_idx'),
        ),
        migrations.AddIndex(
            model_name='policyassignment',
            index=models.Index(fields=['company', 'expose_to_child'], name='policies_po_company_4964e8_idx'),
        ),
        migrations.AddIndex(
            model_name='policyassignment',
            index=models.Index(fields=['assigned_at'], name='policies_po_assigne_ed26da_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='policyassignment',
            unique_together={('policy', 'company')},
        ),
        migrations.AddIndex(
            model_name='policynotice',
            index=models.Index(fields=['policy', 'notice_type'], name='policies_po_policy__f7f50e_idx'),
        ),
        migrations.AddIndex(
            model_name='policynotice',
            index=models.Index(fields=['is_important'], name='policies_po_is_impo_c15ec5_idx'),
        ),
        migrations.AddIndex(
            model_name='policynotice',
            index=models.Index(fields=['order'], name='policies_po_order_e0cb63_idx'),
        ),
    ]
