# Django 프로젝트 필수 패키지 목록
# HB Admin - B2B 플랫폼 백엔드 (배포 최적화)

# =============================================================================
# 핵심 프레임워크 (필수)
# =============================================================================
Django==4.2.7
djangorestframework==3.14.0
djangorestframework-simplejwt==5.3.0

# =============================================================================
# 데이터베이스 (운영 환경)
# =============================================================================
# PostgreSQL (운영 환경 권장)
psycopg2-binary==2.9.10

# =============================================================================
# 보안 및 인증 (필수)
# =============================================================================
django-cors-headers==4.3.1
django-ratelimit==4.1.0

# =============================================================================
# 환경 변수 및 설정 관리 (필수)
# =============================================================================
python-decouple==3.8
python-dotenv==1.0.0

# =============================================================================
# API 및 데이터 처리 (필수)
# =============================================================================
django-filter==23.4
Pillow==11.3.0
requests==2.31.0

# =============================================================================
# 시간대 및 국제화 (필수)
# =============================================================================
pytz==2023.3

# =============================================================================
# 로깅 및 모니터링 (운영 환경)
# =============================================================================
colorlog==6.8.0

# =============================================================================
# API 문서화 (선택사항 - 운영 환경에서 제거 가능)
# =============================================================================
drf-spectacular==0.26.5

# =============================================================================
# 개발 도구 (개발 환경에서만 사용)
# =============================================================================
# django-extensions==3.2.3  # 운영 환경에서는 주석 처리
# ipython==8.17.2          # 운영 환경에서는 주석 처리

# =============================================================================
# 테스트 도구 (개발 환경에서만 사용)
# =============================================================================
# factory-boy==3.3.0       # 운영 환경에서는 주석 처리
# faker==20.1.0           # 운영 환경에서는 주석 처리

# =============================================================================
# 배포 및 성능 최적화 (운영 환경 권장)
# =============================================================================
gunicorn==21.2.0          # WSGI 서버
whitenoise==6.6.0         # 정적 파일 서빙
django-storages==1.14.2   # 클라우드 스토리지 (선택사항)

# =============================================================================
# 보안 강화 (운영 환경 필수)
# =============================================================================
django-secure==1.0.2      # 보안 헤더 및 설정
django-axes==6.3.0        # 로그인 시도 제한

# =============================================================================
# 캐싱 (운영 환경 권장)
# =============================================================================
redis==5.0.1              # Redis 클라이언트
django-redis==5.4.0       # Django Redis 백엔드

# =============================================================================
# 이메일 (운영 환경)
# =============================================================================
django-anymail==10.2      # 이메일 서비스 통합

# =============================================================================
# 모니터링 및 로깅 (운영 환경)
# =============================================================================
sentry-sdk[django]==1.40.4  # 에러 추적 (선택사항)

# =============================================================================
# 배포 환경별 설정 가이드
# =============================================================================
# 
# 개발 환경:
# - django-extensions, ipython, factory-boy, faker 주석 해제
# - DEBUG=True, ALLOWED_HOSTS=localhost
# 
# 운영 환경:
# - 개발 도구 패키지들 주석 처리
# - DEBUG=False, SECURE_SSL_REDIRECT=True
# - 데이터베이스: PostgreSQL 사용
# - 정적 파일: WhiteNoise 또는 CDN 사용
# - 로깅: 파일 로깅 + Sentry (선택사항)
# - 캐싱: Redis 사용
# - 이메일: SMTP 또는 이메일 서비스 사용
#
# 클라우드 배포 (AWS, GCP, Azure):
# - django-storages 활성화
# - 환경별 설정 파일 분리
# - 환경 변수로 민감 정보 관리